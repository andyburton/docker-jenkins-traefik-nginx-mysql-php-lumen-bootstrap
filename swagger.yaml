swagger: '2.0'
info:
  description: New Microservice
  version: 1.0.0
  title: Service API
host: dev.microservice
basePath: /api/v1/
schemes:
  - http
security:
  - APIKeyHeader: []
paths:
  /resource:
    get:
      tags:
        - resource
      summary: Return or query all resources
      description: Returns array of resources
      produces:
        - application/json
      parameters:
        - in: query
          name: fields
          type: string
          required: false
          description: 'Attribute fields to return for resources e.g "id,title"'
        - in: query
          name: search
          type: string
          required: false
          description: 'Search term to apply to query'
        - in: query
          name: sort
          type: string
          required: false
          description: 'Sort order to apply to returned objects in the format fieldName_order e.g. "id_asc" or "code_desc" or "id_asc,code_desc"'
        - in: query
          name: start
          type: integer
          description: The offset of the first object to return
          required: false
        - in: query
          name: limit
          type: integer
          description: The maximum numbers of objects to return
          required: false
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Resource'
    post:
      tags:
        - resource
      summary: Create a new resource
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Resource that needs to be created
          required: true
          schema:
            $ref: '#/definitions/Resource'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
        '400':
          description: Bad request
        '422':
          description: Validation exception
          schema:
            $ref: '#/definitions/Resource'
  '/resource/{id}':
    get:
      tags:
        - resource
      summary: Return existing resource
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Resource ID
          required: true
          type: integer
          format: int64
        - in: query
          name: fields
          type: string
          required: false
          description: 'Attribute fields to return for resources'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
        '404':
          description: Resource not found
    put:
      tags:
        - resource
      summary: Update an existing resource
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Resource ID
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Resource object with fields to update
          required: true
          schema:
            $ref: '#/definitions/Resource'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
        '400':
          description: Bad request
        '404':
          description: Resource not found
        '422':
          description: Validation exception
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - resource
      summary: Delete existing resource
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Resource ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '404':
          description: Resource not found
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-API-Key
definitions:
  Error:
    type: array
    items:
      type: integer
    example: [1001,1002]
  Resource:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 13823
    required:
      - id